#### WGBS analysis pipeline

**** DO NOT DECOMPRESS WGBS FASTQ FILES — THEY ARE *HUGE*

TL/DR
Step 1: abismal index
Step 2: fastp, abismal alignment, format reads, sort .bam, rm duplicates, bsrate, methcounts, symmetric CpG, sort .meth
Step 3: merge all files of one group (e.g., all young samples collapsed into one "young" group)
Step 4: HMR
Step 5: methdiff
Step 6: DMRs for small methylomes (this works for most basic analyses)
Step 7: Differential menthylation btwn large methylomes (starts at #11)
--------------------------------------------------------------
#1: Build your abismal index

    Similar to bowtie and STAR, abismal is an aligner that needs you to build an index/library for it to reference.
    
    Build:
        abismalidx <genome folder or file> <index file>

#2   QC and trimming (fastp) & map with abismal
        abismal -i <index> -o <output SAM> [options] <input fastq 1> <input fastq 2>


#3: Before you can merge paired-end files, they need to be formatted for MethPipe.

        format_reads -o human_esc_f.sam -f abismal human_esc.bam
        
    # "_f" denotes the formatted file


#4: Merge and remove duplicate reads

    First, the files need to be sorted, so the program can identify reads that were mapped to identical genomic locations
    
        samtools sort -O sam -o human_esc_fs.sam human_esc_f.sam
        
    # "_fs" = formatted & sorted
        
    
    The duplicate-removal correction should be done on a per-library basis (i.e, one should pool all reads from multiple runs or lanes sequenced from the same library and remove duplicates).
    
        duplicate-remover -S human_esc_dremove_stat.txt human_esc_fs.sam human_esc_fsd.sam
        
    # "_fsd" = formatted, sorted, & duplicated removed; _f and _fs files can be removed


#5: Estimating bisulfite conversion rate (aka how many unmethylated cytosines are converted to uracil)

    Measuring the bisulfite conversion rate this way requires some kind of control set of genomic cytosines not believed to be methylated. 
    bsrate uses non-CpG cytosines which are believed to be almost completely unmethylated in most mammalian cells.
    
        bsrate -c /path/to/hg38.fa -o human_esc.bsrate human_esc_fsd.sam

#6: Single loci methylation levels

    The methylation level for every cytosine site at single base resolution is estimated as a probability based on the ratio of methylated to total reads mapped to that loci. 
    Because not all DNA methylation contexts are symmetric, methylation levels are produced for both strands and can be analyzed separately.
    
    methcounts -c /path/to/hg38.fa -o human_esc.meth human_esc_fsd.sam

#7: Extracting and merging symmetric CpG methylation levels

    Since symmetric methylation level is the common case for CpG methylation, we have designed all of our analysis tools based on symmetric CpG sites, which means each CpG pair generated by methcounts should be merged to one
    * The command below will merge all CpG pairs while throwing out mutated sites. Note that as long as one site of the pair is mutated, the whole pair will be discarded.
    This default mode is recommended.
        
        symmetric-cpgs -o human_esc_CpG.meth human_esc.meth
        
    Sort the .meth file
    
        sort -T /scratch/alpine/acavalie@colostate.edu/wgbs_BioAD/ \
        -k 1,1 -k 2,2g -k 3,3 \
        BioAD_3_CpG.meth > BioAD_3_CpG_sorted.meth


#8: Merging methcounts files from multiple replicates
    
    The merge-methcounts program is used to merge the those individual methcounts file to produce a single estimate that has higher coverage.
    *** THIS IS OPTIONAL
    
        merge-methcounts human_esc_R1/R1.meth human_esc_R2/R2.meth human_esc_R3/R3.meth -o human_esc.meth

#9: Hypomethylated and hypermethylated regions (both are "HMR" unfortunately)

    For calling HMRs in mammalian methylomes, we suggest only considering the methylation level at CpG sites, as the level of non-CpG methylation is not usually more than a few percent

        hmr -o human_esc.hmr human_esc.meth


#10: Differential methylation

    Comparing a pair of methylomes: Suppose that we want to compare two methylomes: Human ESC.meth and Human NHFF.meth. 
    We start out by calculating the differential methylation score of each CpG site using the methdiff program:

        methdiff -o human_esc_NHFF.methdiff human_esc.meth Human_NHFF.meth

    With differential methylation scores and HMRs for both methylomes available, differentially methylated regions (DMRs) can be calculated with the dmr program. 
    This program uses HMR fragments to compute DMRs.

        dmr human_esc_NHFF.methdiff human_esc.hmr Human_NHFF.hmr DMR_ESC_lt_NHFF DMR_NHFF_lt_ESC
---------------------------------------------------------------------------------------------------------------------------------------
#11: DM analysis of two larger groups of methylomes—THIS IS THE MORE ADVANCED STEPS FOR DETERMINING SIGNIFICANCE OF DMRs AND SITES

    First, we need to make a proportion table (in this, "case" refers to treatment or comparison group):
    
        merge-methcounts -t control_a.meth control_b.meth control_c.meth case_a.meth case_b.meth case_c.meth > proportion_table.txt
        

> > #After the .methdiff proportion tables have been generated, you need to do the following for each comparison:

> > > head -n 1 ASO-vs-ASY_merged.methdiff
> > > chr1	10468	+	CpG	0.999566	36	5	18	16
> > > 
> > > ###1: create a design matrix file to use in the radmeth regression function.
> > > 
> > >   merge-methcounts -t EPI-119.meth EPI-120.meth EPI-135.meth EPI-136.meth EPI-103.meth EPI-104.meth EPI-127.meth EPI-128.meth EPI-111.meth EPI-113.meth EPI-143.meth EPI-145.meth > Day10-merged.meth
> > > 
> > > "The design matrix shows that samples in this dataset are associated with two factors: base and case. The first column corresponds to the base factor and will always be present in the design matrix. 
> > > Think of it as stating that all samples have the same baseline mean methylation level. 
> > > To distinguish cases from controls we add another factor case (second column). The 1’s in this column correspond to the samples which belong to the cases group."
> > > 
> > > base	case
> > > control_a	1	0
> > > control_b	1	0
> > > control_c	1	0
> > > case_a	1	1
> > > case_b	1	1
> > > case_c	1	1
> > > 
> > > "After creating the proportion table and the design matrix, we are now ready to start the methylation analysis. It consists of: 
> > > 	(1) regression, 
> > > 	(2) combining significance, and 
> > > 	(3) multiple testing adjustment steps."
> > > 	
> > > ###2: Regression: Suppose that the proportion table.txt and design matrix.txt are as described above.
> > > #The regression step is run with the command:
> > > 
> > >   radmeth regression -factor case design_matrix.txt proportion_table.txt > cpgs.bed
> > > 
> > > "The -factor parameter specifies the factor with respect to which we want to test for differential methylation.
> > > The test factor is case, meaning that we are testing for differential methylation between cases and controls. 
> > > In the output file cpgs.bed, the last four columns correspond to the total read counts and methylated read counts of the case group and control group, respectively. 
> > > The p-value (5-th column) is given by the log-likelihood ratio test. A p-value of -1 means that the test was not performed: either due to zero coverage over all case or control samples, or because the methylation level is identical in all samples: both cases in which the regression would fail. 
> > > 
> > > We do not recommend using p-values generated by radmeth regression directly, instead we adjust the p-value of each CpG site based on the p-values of the neighboring CpGs."
> > > 
> > > ###3: Combining significance and adjusting for multiple testing: 
> > > #Both of these steps are performed simultaneously.
> > > #Given the cpgs.bed file from the previous step, run
> > > 
> > >   radmeth adjust -bins 1:200:1 cpgs.bed > cpgs.adjusted.bed
> > > 
> > > "Here, the only required parameter, besides the input file, is -bins whose value is set to 1:200:1 (which is also the default value).
> > > This means that for each n = 1, 2, ...199, radmeth adjust computes the correlation between pvalues of CpGs located at distance n from each other.
> > > These correlations are used during significance combination step.
> > > In addition, bin sizes determine the window for combining significance.
> > > In contrast, if -bins is set to 1 : 15 : 5, then the correlation is computed separately for p-values corresponding to CpGs at distances [1, 5), [5, 10), and [10, 15) from one another."
> > > 
> > > "The first five columns and the last four columns of radmeth adjust have the same meaning as those output by
> > > radmeth regression. The 6th column gives the modified p-value based on the original p-value of the site and
> > > the p-values of its neighbors. The 7th column gives the FDR-corrected p-value. Then the last four columns correspond to the total read counts and methylated read counts of the case group and control group, respectively
> > > 
> > > Here is what the “cpgs.adjusted.bed” file looks like for our example dataset:"
> > > 
> > > head -n 5 cpgs.adjusted.bed
> > > 
> > > chr1	108	+	CpG	0.157971	0.099290	0.353466	18	4	20
> > > chr1	114	+	CpG	0.559191	0.099290	0.353466	21	3	41
> > > chr1	160	+	CpG	0.095112	0.099290	0.353466	32	24	39
> > > chr1	309	+	CpG	0.239772	0.122248	0.368902	33	17	19
> > > chr1	499	+	CpG	0.770140	0.204467	0.419872	43	22	29
> > > 
> > > ###4: Individual differentially methylated sites:
> > > 
> > > #To get all CpGs with FDR-corrected p-value below 0.01, run
> > > 
> > >   awk ’$7 <= 0.01 "{ print $0; $}"’ cpgs.adjusted.bed > dm_cpgs.bed
> > > 
> > > ###5: Differentially methylated regions: It is possible to further join individually differentially methylated CpGs into differentially methylated regions.
> > > 
> > >   radmeth merge -p 0.01 cpgs.adjusted.bed > dmrs.bed
> > > 
> > > "The current algorithm is conservative: it joins neighboring differentially methylated sites with p-value below 0.01 (set by the -p parameter).
> > > The output format is chrom start end dmr num-sites meth-diff where num-sites and meth-diff are the number of significantly differentially methylated CpGs in the DMR and the estimated methylation difference.
> > > 
> > > For our example, the output looks like this:"
> > > head -n 5 dmrs.bed
> > > 
> > > chr1	57315	57721	dmr	10	-0.498148
> > > chr1	58263	59009	dmr	27	-0.521182
> > > chr1	138522	139012	dmr	13	-0.443182
> > > chr1	149284	149444	dmr	7	-0.430453
> > > chr1	274339	275254	dmr	18	-0.520114
----------------------------------------------------------------------------------------------------------------------------------------

#?: So how do we find out which genes (or TEs) are found within these DMRs?

    bedtools has a "intersect intervals" function, that can find overlapping sections in bed files using genome coordinates.
    Here is the link to the bedtools intersect manual: https://bedtools.readthedocs.io/en/latest/content/tools/intersect.html
    
        bedtools intersect [OPTIONS] -a <FILE> -b <FILE1, FILE2, ..., FILEN>
        
    Now that you have DMRs, you need to find out what genes/transcripts lie within those regions

        There's a lot of different ways to do this, but here I chose to use bedtools Intersect intervals to see where my peaks and TEs overlaps
    
        To do this you need:
        
            1) Your BAM/BED/bedGraph/GFF/VCF/EncodePeak formatted peaks file
            2) A bedfile for your genome --> in this case, I made a .bed using the repeatmasker hg38 TE annotation. It's in my folder in the shared LaRocca OneDrive*
        
                * the repeatmasker bed file is huge, so be cautious about opening it.
            
        The easiest way to run bedtools is on Galaxy (usegalaxy.org). 
        File A (your dmrs) will be intersected with file B (the genome file), but you have to choose which information is saved as output.
            *File order is arbitrary
            
        I selected the following option:
            "Write the original A and B entries plus the number of base pairs of overlap between the two features. 
            Only A features with overlap are reported. Restricted by the fraction- and reciprocal option (-wo)"
        
            This retains your dmr information, while also showing where they intersect and which TEs can be found at the overlapping loci.
        
        * If you don't like the "black box" nature of Galaxy, it does provide the command line code to run the program yourself.
        
            bedtools intersect -a '/jetstream2/scratch/main/jobs/58688068/inputs/dataset_815558f7-1548-41bd-a952-86b4dcaf3cf7.dat'\ 
            -b '/jetstream2/scratch/main/jobs/58688068/inputs/dataset_1ee83450-3ca4-434a-83d9-6fdabffcaf90.dat'\
            -wo > '/jetstream2/scratch/main/jobs/58688068/outputs/dataset_b25f8b24-d4fb-4de2-bb89-058fea606fbf.dat'
